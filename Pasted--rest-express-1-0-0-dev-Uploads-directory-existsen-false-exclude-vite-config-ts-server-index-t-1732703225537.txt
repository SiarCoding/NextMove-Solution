> rest-express@1.0.0 dev
Uploads directory existsen=false --exclude vite.config.ts.* server/index.ts
Uploads directory permissions: Stats {
  dev: 249,
  mode: 16877,
  nlink: 1,
  uid: 1000,
  gid: 1000,
  rdev: 0,
  blksize: 4096,
  ino: 56694,
  size: 80,
  blocks: 0,
  atimeMs: 1732666228827.2378,
  mtimeMs: 1732700728221.1191,
  ctimeMs: 1732700728221.1191,
  birthtimeMs: 1732666228827.2378,
  atime: 2024-11-27T00:10:28.827Z,
  mtime: 2024-11-27T09:45:28.221Z,
  ctime: 2024-11-27T09:45:28.221Z,
  birthtime: 2024-11-27T00:10:28.827Z
}
Re-optimizing dependencies because lockfile has changed
10:23:24 AM [express] serving on port 5000

 ERROR(TypeScript)  Could not find a declaration file for module 'bcryptjs'. '/home/runner/Kundenportal-Entwicklung/node_modules/bcryptjs/index.js' implicitly has an 'any' type.
  Try `npm i --save-dev @types/bcryptjs` if it exists or add a new declaration (.d.ts) file containing `declare module 'bcryptjs';`
 FILE  /home/runner/Kundenportal-Entwicklung/server/routes.ts:2:20

    1 | import { type Express, type Request, type Response } from "express";
  > 2 | import bcrypt from "bcryptjs";
      |                    ^^^^^^^^^^
    3 | import { and, eq, desc, gte } from "drizzle-orm";
    4 | import { db } from "db";
    5 | import {

 ERROR(TypeScript)  Property 'userId' does not exist on type 'Session & Partial<SessionData>'.
 FILE  /home/runner/Kundenportal-Entwicklung/server/routes.ts:22:20

    20 | // Middleware to check if user is authenticated
    21 | const requireAuth = async (req: Request, res: Response, next: Function) => {
  > 22 |   if (!req.session.userId) {
       |                    ^^^^^^
    23 |     return res.status(401).json({ error: "Nicht authentifiziert" });
    24 |   }
    25 |   next();

 ERROR(TypeScript)  Property 'userId' does not exist on type 'Session & Partial<SessionData>'.
 FILE  /home/runner/Kundenportal-Entwicklung/server/routes.ts:30:20

    28 | // Middleware to check if user is admin
    29 | const requireAdmin = async (req: Request, res: Response, next: Function) => {
  > 30 |   if (!req.session.userId) {
       |                    ^^^^^^
    31 |     return res.status(401).json({ error: "Nicht authentifiziert" });
    32 |   }
    33 |

 ERROR(TypeScript)  Property 'userId' does not exist on type 'Session & Partial<SessionData>'.
 FILE  /home/runner/Kundenportal-Entwicklung/server/routes.ts:35:37

    33 |
    34 |   const user = await db.query.users.findFirst({
  > 35 |     where: eq(users.id, req.session.userId)
       |                                     ^^^^^^
    36 |   });
    37 |
    38 |   if (!user || user.role !== "admin") {

 ERROR(TypeScript)  No overload matches this call.
  Overload 1 of 2, '(value: { email: string | SQL<unknown> | Placeholder<string, any>; password: string | SQL<unknown> | Placeholder<string, any>; firstName: string | SQL<unknown> | Placeholder<...>; ... 6 more ...; lastActive?: Date | ... 3 more ... | undefined; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'companyName' does not exist in type '{ email: string | SQL<unknown> | Placeholder<string, any>; password: string | SQL<unknown> | Placeholder<string, any>; firstName: string | SQL<unknown> | Placeholder<...>; ... 6 more ...; lastActive?: Date | ... 3 more ... | undefined; }'.
  Overload 2 of 2, '(values: { email: string | SQL<unknown> | Placeholder<string, any>; password: string | SQL<unknown> | Placeholder<string, any>; firstName: string | SQL<unknown> | Placeholder<...>; ... 6 more ...; lastActive?: Date | ... 3 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'email' does not exist in type '{ email: string | SQL<unknown> | Placeholder<string, any>; password: string | SQL<unknown> | Placeholder<string, any>; firstName: string | SQL<unknown> | Placeholder<...>; ... 6 more ...; lastActive?: Date | ... 3 more ... | undefined; }[]'.
 FILE  /home/runner/Kundenportal-Entwicklung/server/routes.ts:65:10

    63 |       // Create user
    64 |       const [user] = await db.insert(users)
  > 65 |         .values({
       |          ^^^^^^
    66 |           email,
    67 |           password: hashedPassword,
    68 |           firstName,

 ERROR(TypeScript)  Property 'userId' does not exist on type 'Session & Partial<SessionData>'.
 FILE  /home/runner/Kundenportal-Entwicklung/server/routes.ts:104:19

    102 |       }
    103 |
  > 104 |       req.session.userId = user.id;
        |                   ^^^^^^
    105 |
    106 |       // Update last active
    107 |       await db.update(users)

 ERROR(TypeScript)  Property 'userId' does not exist on type 'Session & Partial<SessionData>'.
 FILE  /home/runner/Kundenportal-Entwicklung/server/routes.ts:129:24

    127 |   app.get("/api/auth/session", async (req, res) => {
    128 |     try {
  > 129 |       if (!req.session.userId) {
        |                        ^^^^^^
    130 |         return res.status(401).json({ error: "Nicht authentifiziert" });
    131 |       }
    132 |

 ERROR(TypeScript)  Property 'userId' does not exist on type 'Session & Partial<SessionData>'.
 FILE  /home/runner/Kundenportal-Entwicklung/server/routes.ts:134:41

    132 |
    133 |       const user = await db.query.users.findFirst({
  > 134 |         where: eq(users.id, req.session.userId)
        |                                         ^^^^^^
    135 |       });
    136 |
    137 |       if (!user) {

[TypeScript] Found 8 errors. Watching for file changes.
10:23:42 AM [express] GET /api/auth/session 401 in 4ms :: {"error":"Nicht authentifiziert"}
10:23:42 AM [express] GET /api/auth/session 401 in 1ms :: {"error":"Nicht authentifiziert"}
10:24:04 AM [express] GET /api/auth/session 401 in 1ms :: {"error":"Nicht authentifiziert"}
10:24:04 AM [express] GET /api/auth/session 401 in 1ms :: {"error":"Nicht authentifiziert"}
10:24:05 AM [express] GET /api/auth/session 401 in 0ms :: {"error":"Nicht authentifiziert"}
10:24:05 AM [express] GET /api/auth/session 401 in 0ms :: {"error":"Nicht authentifiziert"}
10:24:07 AM [express] GET /api/auth/session 401 in 1ms :: {"error":"Nicht authentifiziert"}
10:24:07 AM [express] GET /api/auth/session 401 in 0ms :: {"error":"Nicht authentifiziert"}
10:24:09 AM [express] GET /api/auth/session 401 in 0ms :: {"error":"Nicht authentifiziert"}
10:24:09 AM [express] GET /api/auth/session 401 in 1ms :: {"error":"Nicht authentifiziert"}
Login error: error: column "company_id" does not exist
    at file:///home/runner/Kundenportal-Entwicklung/node_modules/@neondatabase/serverless/index.mjs:1345:74
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at NeonPreparedQuery.execute (/home/runner/Kundenportal-Entwicklung/node_modules/src/neon-serverless/session.ts:102:18)
    at <anonymous> (/home/runner/Kundenportal-Entwicklung/server/routes.ts:86:20) {
  length: 110,
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: undefined,
  position: '62',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_relation.c',
  line: '3722',
  routine: 'errorMissingColumn'
}
10:25:25 AM [express] POST /api/auth/login 500 in 771ms :: {"error":"Anmeldung fehlgeschlagen"}
Login error: error: column "company_id" does not exist
    at file:///home/runner/Kundenportal-Entwicklung/node_modules/@neondatabase/serverless/index.mjs:1345:74
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at NeonPreparedQuery.execute (/home/runner/Kundenportal-Entwicklung/node_modules/src/neon-serverless/session.ts:102:18)
    at <anonymous> (/home/runner/Kundenportal-Entwicklung/server/routes.ts:86:20) {
  length: 110,
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: undefined,
  position: '62',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_relation.c',
  line: '3722',
  routine: 'errorMissingColumn'
}
10:25:29 AM [express] POST /api/auth/login 500 in 286ms :: {"error":"Anmeldung fehlgeschlagen"}
Login error: error: column "company_id" does not exist
    at file:///home/runner/Kundenportal-Entwicklung/node_modules/@neondatabase/serverless/index.mjs:1345:74
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at NeonPreparedQuery.execute (/home/runner/Kundenportal-Entwicklung/node_modules/src/neon-serverless/session.ts:102:18)
    at <anonymous> (/home/runner/Kundenportal-Entwicklung/server/routes.ts:86:20) {
  length: 110,
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: undefined,
  position: '62',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_relation.c',
  line: '3722',
  routine: 'errorMissingColumn'
}
10:25:43 AM [express] POST /api/auth/login 500 in 278ms :: {"error":"Anmeldung fehlgeschlagen"}
Login error: error: column "company_id" does not exist
    at file:///home/runner/Kundenportal-Entwicklung/node_modules/@neondatabase/serverless/index.mjs:1345:74
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at NeonPreparedQuery.execute (/home/runner/Kundenportal-Entwicklung/node_modules/src/neon-serverless/session.ts:102:18)
    at <anonymous> (/home/runner/Kundenportal-Entwicklung/server/routes.ts:86:20) {
  length: 110,
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: undefined,
  position: '62',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_relation.c',
  line: '3722',
  routine: 'errorMissingColumn'
}
10:25:47 AM [express] POST /api/auth/login 500 in 292ms :: {"error":"Anmeldung fehlgeschlagen"}
10:26:04 AM [express] GET /api/auth/session 401 in 1ms :: {"error":"Nicht authentifiziert"}
10:26:05 AM [express] GET /api/auth/session 401 in 1ms :: {"error":"Nicht authentifiziert"}
10:26:06 AM [express] GET /api/auth/session 401 in 1ms :: {"error":"Nicht authentifiziert"}
10:26:07 AM [express] GET /api/auth/session 401 in 1ms :: {"error":"Nicht authentifiziert"}
